import {
  GetDefaultWalletRequestDtoChainEnum,
  WalletDto
} from "@passes/api-client"
import DefaultIcon from "public/icons/defaultWalletTypeIcon.svg"
import InfoIcon from "public/icons/infoIcon.svg"
import Metamask from "public/icons/metamask-icon.svg"
import Phantom from "public/icons/phantom-icon.svg"
import TooltipStar from "public/icons/tooltip-star-icon.svg"
import React from "react"
import { Button } from "src/components/atoms"
import IconTooltip from "src/components/atoms/IconTooltip"

import ConditionRendering from "../../../molecules/ConditionRendering"

interface WalletListItemProps {
  wallet: WalletDto
  deleteWalletHandler: (value: string) => void
  defaultSolMinting: boolean
  defaultEthMinting: boolean
  setDefaultMinting: (
    walletId: string,
    chain: GetDefaultWalletRequestDtoChainEnum
  ) => Promise<void>
}

const WalletListItem = ({
  wallet,
  deleteWalletHandler,
  defaultSolMinting,
  defaultEthMinting,
  setDefaultMinting
}: WalletListItemProps) => {
  const CUSTODIAL_TOOLTIP_TEXT =
    "This is your custodial address: the address generated by Passes on your behalf, used to store your Passes NFTs."
  const AUTH_TOOLTIP_TEXT =
    "Unauthenticated Wallet: can only be used for Payouts."

  const walletTypeIcon = (value: string, isAuthWallet: boolean) => {
    if (isAuthWallet) {
      switch (value) {
        case "eth":
          return <Metamask />
        case "sol":
          return <Phantom />
      }
    }
    return <DefaultIcon />
  }

  const walletTypeName = (value: string, isAuthWallet: boolean) => {
    if (!isAuthWallet) {
      return "Cold"
    }
    switch (value) {
      case "eth":
        return "Metamask"
      case "sol":
        return "Phantom"
    }
    return value
  }

  const onDeleteHandler = () => {
    if (!wallet.custodial) {
      deleteWalletHandler(wallet.walletId)
    }
  }

  return (
    <>
      <div
        className="
          mb-[11px]
          flex
          items-center
          justify-between
          border-t
          border-[#2C282D]
          pt-[11px]
          pl-[20px]"
        key={wallet.walletId}
      >
        <div className="relative flex items-center">
          <div className="absolute left-[-30px] top-[50%] translate-y-[-50%]">
            {wallet.custodial && (
              <IconTooltip
                Icon={InfoIcon}
                position="top"
                tooltipText={CUSTODIAL_TOOLTIP_TEXT}
                className=""
              />
            )}
          </div>
          <div className="absolute right-[15px] top-[50%] translate-y-[-50%]">
            {!wallet.authenticated && (
              <IconTooltip
                Icon={TooltipStar}
                position="top"
                tooltipText={AUTH_TOOLTIP_TEXT}
              />
            )}
          </div>
          <div className="mr-[30px] flex w-[135px] items-center">
            <div>{walletTypeIcon(wallet.chain, wallet.authenticated)}</div>
            <span className="ml-[12px] text-[12px] font-bold">
              {walletTypeName(wallet.chain, wallet.authenticated)}
            </span>
          </div>
        </div>
        <div className='text-[#ffffffeb]" min-w-[330px] text-left text-[12px]'>
          {wallet.address}
        </div>
        <ConditionRendering condition={wallet.authenticated}>
          {defaultEthMinting && <div>Default eth address</div>}
          {defaultSolMinting && <div>Default sol address</div>}
          {!defaultEthMinting && !defaultSolMinting && wallet.authenticated && (
            <button
              onClick={async () =>
                await setDefaultMinting(wallet.walletId, wallet.chain)
              }
            >
              Set {wallet.chain} address
            </button>
          )}
          {!defaultEthMinting &&
            !defaultSolMinting &&
            !wallet.authenticated && <div>Unauthenticated</div>}
        </ConditionRendering>
        <Button
          disabled={wallet.custodial}
          onClick={onDeleteHandler}
          variant="link-purple"
        >
          <span className="ml-[39px] mr-[29px]">Delete</span>
        </Button>
      </div>
    </>
  )
}

export default WalletListItem
