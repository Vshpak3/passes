/* tslint:disable */
/* eslint-disable */
/**
 * Passes Backend
 * Get your pass
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateContentRequestDto
 */
export interface CreateContentRequestDto {
    /**
     * 
     * @type {string}
     * @memberof CreateContentRequestDto
     */
    url: string;
    /**
     * 
     * @type {string}
     * @memberof CreateContentRequestDto
     */
    contentType: CreateContentRequestDtoContentTypeEnum;
}


/**
 * @export
 */
export const CreateContentRequestDtoContentTypeEnum = {
    Image: 'image',
    Video: 'video',
    Gif: 'gif',
    Audio: 'audio'
} as const;
export type CreateContentRequestDtoContentTypeEnum = typeof CreateContentRequestDtoContentTypeEnum[keyof typeof CreateContentRequestDtoContentTypeEnum];


/**
 * Check if a given object implements the CreateContentRequestDto interface.
 */
export function instanceOfCreateContentRequestDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "url" in value;
    isInstance = isInstance && "contentType" in value;

    return isInstance;
}

export function CreateContentRequestDtoFromJSON(json: any): CreateContentRequestDto {
    return CreateContentRequestDtoFromJSONTyped(json, false);
}

export function CreateContentRequestDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateContentRequestDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'url': json['url'],
        'contentType': json['contentType'],
    };
}

export function CreateContentRequestDtoToJSON(value?: CreateContentRequestDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'url': value.url,
        'contentType': value.contentType,
    };
}

