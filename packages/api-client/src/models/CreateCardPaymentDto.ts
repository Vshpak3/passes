/* tslint:disable */
/* eslint-disable */
/**
 * Passes Backend
 * Get your pass
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AmountDto,
    AmountDtoFromJSON,
    AmountDtoFromJSONTyped,
    AmountDtoToJSON,
} from './AmountDto';
import {
    MetaData,
    MetaDataFromJSON,
    MetaDataFromJSONTyped,
    MetaDataToJSON,
} from './MetaData';
import {
    SourceDto,
    SourceDtoFromJSON,
    SourceDtoFromJSONTyped,
    SourceDtoToJSON,
} from './SourceDto';

/**
 * 
 * @export
 * @interface CreateCardPaymentDto
 */
export interface CreateCardPaymentDto {
    /**
     * 
     * @type {string}
     * @memberof CreateCardPaymentDto
     */
    idempotencyKey: string;
    /**
     * 
     * @type {AmountDto}
     * @memberof CreateCardPaymentDto
     */
    amount: AmountDto;
    /**
     * 
     * @type {SourceDto}
     * @memberof CreateCardPaymentDto
     */
    source: SourceDto;
    /**
     * 
     * @type {string}
     * @memberof CreateCardPaymentDto
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof CreateCardPaymentDto
     */
    channel?: string;
    /**
     * 
     * @type {MetaData}
     * @memberof CreateCardPaymentDto
     */
    metadata: MetaData;
    /**
     * 
     * @type {object}
     * @memberof CreateCardPaymentDto
     */
    verification: object;
    /**
     * 
     * @type {boolean}
     * @memberof CreateCardPaymentDto
     */
    autoCapture?: boolean;
    /**
     * 
     * @type {string}
     * @memberof CreateCardPaymentDto
     */
    verificationSuccessUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof CreateCardPaymentDto
     */
    verificationFailureUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof CreateCardPaymentDto
     */
    keyId?: string;
    /**
     * 
     * @type {string}
     * @memberof CreateCardPaymentDto
     */
    encryptedData?: string;
}

export function CreateCardPaymentDtoFromJSON(json: any): CreateCardPaymentDto {
    return CreateCardPaymentDtoFromJSONTyped(json, false);
}

export function CreateCardPaymentDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateCardPaymentDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'idempotencyKey': json['idempotencyKey'],
        'amount': AmountDtoFromJSON(json['amount']),
        'source': SourceDtoFromJSON(json['source']),
        'description': !exists(json, 'description') ? undefined : json['description'],
        'channel': !exists(json, 'channel') ? undefined : json['channel'],
        'metadata': MetaDataFromJSON(json['metadata']),
        'verification': json['verification'],
        'autoCapture': !exists(json, 'autoCapture') ? undefined : json['autoCapture'],
        'verificationSuccessUrl': !exists(json, 'verificationSuccessUrl') ? undefined : json['verificationSuccessUrl'],
        'verificationFailureUrl': !exists(json, 'verificationFailureUrl') ? undefined : json['verificationFailureUrl'],
        'keyId': !exists(json, 'keyId') ? undefined : json['keyId'],
        'encryptedData': !exists(json, 'encryptedData') ? undefined : json['encryptedData'],
    };
}

export function CreateCardPaymentDtoToJSON(value?: CreateCardPaymentDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'idempotencyKey': value.idempotencyKey,
        'amount': AmountDtoToJSON(value.amount),
        'source': SourceDtoToJSON(value.source),
        'description': value.description,
        'channel': value.channel,
        'metadata': MetaDataToJSON(value.metadata),
        'verification': value.verification,
        'autoCapture': value.autoCapture,
        'verificationSuccessUrl': value.verificationSuccessUrl,
        'verificationFailureUrl': value.verificationFailureUrl,
        'keyId': value.keyId,
        'encryptedData': value.encryptedData,
    };
}

