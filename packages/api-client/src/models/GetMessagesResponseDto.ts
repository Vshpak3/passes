/* tslint:disable */
/* eslint-disable */
/**
 * Passes Backend
 * Get your pass
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { MessageDto } from './MessageDto';
import {
    MessageDtoFromJSON,
    MessageDtoFromJSONTyped,
    MessageDtoToJSON,
} from './MessageDto';

/**
 * 
 * @export
 * @interface GetMessagesResponseDto
 */
export interface GetMessagesResponseDto {
    /**
     * 
     * @type {string}
     * @memberof GetMessagesResponseDto
     */
    lastId?: string;
    /**
     * 
     * @type {Date}
     * @memberof GetMessagesResponseDto
     */
    sentAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof GetMessagesResponseDto
     */
    dateLimit?: Date;
    /**
     * 
     * @type {string}
     * @memberof GetMessagesResponseDto
     */
    channelId: string;
    /**
     * 
     * @type {boolean}
     * @memberof GetMessagesResponseDto
     */
    contentOnly: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GetMessagesResponseDto
     */
    pending: boolean;
    /**
     * 
     * @type {Array<MessageDto>}
     * @memberof GetMessagesResponseDto
     */
    data: Array<MessageDto>;
}

/**
 * Check if a given object implements the GetMessagesResponseDto interface.
 */
export function instanceOfGetMessagesResponseDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "channelId" in value;
    isInstance = isInstance && "contentOnly" in value;
    isInstance = isInstance && "pending" in value;
    isInstance = isInstance && "data" in value;

    return isInstance;
}

export function GetMessagesResponseDtoFromJSON(json: any): GetMessagesResponseDto {
    return GetMessagesResponseDtoFromJSONTyped(json, false);
}

export function GetMessagesResponseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetMessagesResponseDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'lastId': !exists(json, 'lastId') ? undefined : json['lastId'],
        'sentAt': !exists(json, 'sentAt') ? undefined : (new Date(json['sentAt'])),
        'dateLimit': !exists(json, 'dateLimit') ? undefined : (new Date(json['dateLimit'])),
        'channelId': json['channelId'],
        'contentOnly': json['contentOnly'],
        'pending': json['pending'],
        'data': ((json['data'] as Array<any>).map(MessageDtoFromJSON)),
    };
}

export function GetMessagesResponseDtoToJSON(value?: GetMessagesResponseDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'lastId': value.lastId,
        'sentAt': value.sentAt === undefined ? undefined : (value.sentAt.toISOString()),
        'dateLimit': value.dateLimit === undefined ? undefined : (value.dateLimit.toISOString()),
        'channelId': value.channelId,
        'contentOnly': value.contentOnly,
        'pending': value.pending,
        'data': ((value.data as Array<any>).map(MessageDtoToJSON)),
    };
}

