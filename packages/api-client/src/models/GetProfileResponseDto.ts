/* tslint:disable */
/* eslint-disable */
/**
 * Passes Backend
 * Get your pass
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GetProfileResponseDto
 */
export interface GetProfileResponseDto {
    /**
     * 
     * @type {string}
     * @memberof GetProfileResponseDto
     */
    profileId: string;
    /**
     * 
     * @type {string}
     * @memberof GetProfileResponseDto
     */
    userId: string;
    /**
     * 
     * @type {string}
     * @memberof GetProfileResponseDto
     */
    legalFullName?: string;
    /**
     * 
     * @type {string}
     * @memberof GetProfileResponseDto
     */
    displayName?: string;
    /**
     * 
     * @type {string}
     * @memberof GetProfileResponseDto
     */
    coverTitle?: string;
    /**
     * 
     * @type {string}
     * @memberof GetProfileResponseDto
     */
    coverDescription?: string;
    /**
     * 
     * @type {string}
     * @memberof GetProfileResponseDto
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof GetProfileResponseDto
     */
    discordUsername?: string;
    /**
     * 
     * @type {string}
     * @memberof GetProfileResponseDto
     */
    facebookUsername?: string;
    /**
     * 
     * @type {string}
     * @memberof GetProfileResponseDto
     */
    instagramUsername?: string;
    /**
     * 
     * @type {string}
     * @memberof GetProfileResponseDto
     */
    tiktokUsername?: string;
    /**
     * 
     * @type {string}
     * @memberof GetProfileResponseDto
     */
    twitchUsername?: string;
    /**
     * 
     * @type {string}
     * @memberof GetProfileResponseDto
     */
    twitterUsername?: string;
    /**
     * 
     * @type {string}
     * @memberof GetProfileResponseDto
     */
    youtubeUsername?: string;
    /**
     * 
     * @type {boolean}
     * @memberof GetProfileResponseDto
     */
    isKYCVerified?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GetProfileResponseDto
     */
    isActive: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof GetProfileResponseDto
     */
    isAdult?: boolean;
}

/**
 * Check if a given object implements the GetProfileResponseDto interface.
 */
export function instanceOfGetProfileResponseDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "profileId" in value;
    isInstance = isInstance && "userId" in value;
    isInstance = isInstance && "isActive" in value;

    return isInstance;
}

export function GetProfileResponseDtoFromJSON(json: any): GetProfileResponseDto {
    return GetProfileResponseDtoFromJSONTyped(json, false);
}

export function GetProfileResponseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetProfileResponseDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'profileId': json['profileId'],
        'userId': json['userId'],
        'legalFullName': !exists(json, 'legalFullName') ? undefined : json['legalFullName'],
        'displayName': !exists(json, 'displayName') ? undefined : json['displayName'],
        'coverTitle': !exists(json, 'coverTitle') ? undefined : json['coverTitle'],
        'coverDescription': !exists(json, 'coverDescription') ? undefined : json['coverDescription'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'discordUsername': !exists(json, 'discordUsername') ? undefined : json['discordUsername'],
        'facebookUsername': !exists(json, 'facebookUsername') ? undefined : json['facebookUsername'],
        'instagramUsername': !exists(json, 'instagramUsername') ? undefined : json['instagramUsername'],
        'tiktokUsername': !exists(json, 'tiktokUsername') ? undefined : json['tiktokUsername'],
        'twitchUsername': !exists(json, 'twitchUsername') ? undefined : json['twitchUsername'],
        'twitterUsername': !exists(json, 'twitterUsername') ? undefined : json['twitterUsername'],
        'youtubeUsername': !exists(json, 'youtubeUsername') ? undefined : json['youtubeUsername'],
        'isKYCVerified': !exists(json, 'isKYCVerified') ? undefined : json['isKYCVerified'],
        'isActive': json['isActive'],
        'isAdult': !exists(json, 'isAdult') ? undefined : json['isAdult'],
    };
}

export function GetProfileResponseDtoToJSON(value?: GetProfileResponseDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'profileId': value.profileId,
        'userId': value.userId,
        'legalFullName': value.legalFullName,
        'displayName': value.displayName,
        'coverTitle': value.coverTitle,
        'coverDescription': value.coverDescription,
        'description': value.description,
        'discordUsername': value.discordUsername,
        'facebookUsername': value.facebookUsername,
        'instagramUsername': value.instagramUsername,
        'tiktokUsername': value.tiktokUsername,
        'twitchUsername': value.twitchUsername,
        'twitterUsername': value.twitterUsername,
        'youtubeUsername': value.youtubeUsername,
        'isKYCVerified': value.isKYCVerified,
        'isActive': value.isActive,
        'isAdult': value.isAdult,
    };
}

