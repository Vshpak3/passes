/* tslint:disable */
/* eslint-disable */
/**
 * Passes Backend
 * Get your pass
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ContentDto } from './ContentDto';
import {
    ContentDtoFromJSON,
    ContentDtoFromJSONTyped,
    ContentDtoToJSON,
} from './ContentDto';

/**
 * 
 * @export
 * @interface MessageDto
 */
export interface MessageDto {
    /**
     * 
     * @type {string}
     * @memberof MessageDto
     */
    messageId: string;
    /**
     * 
     * @type {string}
     * @memberof MessageDto
     */
    senderId: string;
    /**
     * 
     * @type {string}
     * @memberof MessageDto
     */
    text: string;
    /**
     * 
     * @type {Array<ContentDto>}
     * @memberof MessageDto
     */
    contents: Array<ContentDto>;
    /**
     * 
     * @type {number}
     * @memberof MessageDto
     */
    previewIndex: number;
    /**
     * 
     * @type {string}
     * @memberof MessageDto
     */
    channelId: string;
    /**
     * 
     * @type {number}
     * @memberof MessageDto
     */
    tipAmount?: number;
    /**
     * 
     * @type {Date}
     * @memberof MessageDto
     */
    paidAt?: Date | null;
    /**
     * 
     * @type {boolean}
     * @memberof MessageDto
     */
    paying: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof MessageDto
     */
    pending: boolean;
    /**
     * 
     * @type {number}
     * @memberof MessageDto
     */
    price: number;
    /**
     * 
     * @type {boolean}
     * @memberof MessageDto
     */
    reverted: boolean;
    /**
     * 
     * @type {Date}
     * @memberof MessageDto
     */
    sentAt: Date;
    /**
     * 
     * @type {boolean}
     * @memberof MessageDto
     */
    contentProcessed: boolean;
}

/**
 * Check if a given object implements the MessageDto interface.
 */
export function instanceOfMessageDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "messageId" in value;
    isInstance = isInstance && "senderId" in value;
    isInstance = isInstance && "text" in value;
    isInstance = isInstance && "contents" in value;
    isInstance = isInstance && "previewIndex" in value;
    isInstance = isInstance && "channelId" in value;
    isInstance = isInstance && "paying" in value;
    isInstance = isInstance && "pending" in value;
    isInstance = isInstance && "price" in value;
    isInstance = isInstance && "reverted" in value;
    isInstance = isInstance && "sentAt" in value;
    isInstance = isInstance && "contentProcessed" in value;

    return isInstance;
}

export function MessageDtoFromJSON(json: any): MessageDto {
    return MessageDtoFromJSONTyped(json, false);
}

export function MessageDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): MessageDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'messageId': json['messageId'],
        'senderId': json['senderId'],
        'text': json['text'],
        'contents': ((json['contents'] as Array<any>).map(ContentDtoFromJSON)),
        'previewIndex': json['previewIndex'],
        'channelId': json['channelId'],
        'tipAmount': !exists(json, 'tipAmount') ? undefined : json['tipAmount'],
        'paidAt': !exists(json, 'paidAt') ? undefined : (json['paidAt'] === null ? null : new Date(json['paidAt'])),
        'paying': json['paying'],
        'pending': json['pending'],
        'price': json['price'],
        'reverted': json['reverted'],
        'sentAt': (new Date(json['sentAt'])),
        'contentProcessed': json['contentProcessed'],
    };
}

export function MessageDtoToJSON(value?: MessageDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'messageId': value.messageId,
        'senderId': value.senderId,
        'text': value.text,
        'contents': ((value.contents as Array<any>).map(ContentDtoToJSON)),
        'previewIndex': value.previewIndex,
        'channelId': value.channelId,
        'tipAmount': value.tipAmount,
        'paidAt': value.paidAt === undefined ? undefined : (value.paidAt === null ? null : value.paidAt.toISOString()),
        'paying': value.paying,
        'pending': value.pending,
        'price': value.price,
        'reverted': value.reverted,
        'sentAt': (value.sentAt.toISOString()),
        'contentProcessed': value.contentProcessed,
    };
}

