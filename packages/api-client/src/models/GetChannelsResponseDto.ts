/* tslint:disable */
/* eslint-disable */
/**
 * Passes Backend
 * Get your pass
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ChannelMemberDto } from './ChannelMemberDto';
import {
    ChannelMemberDtoFromJSON,
    ChannelMemberDtoFromJSONTyped,
    ChannelMemberDtoToJSON,
} from './ChannelMemberDto';

/**
 * 
 * @export
 * @interface GetChannelsResponseDto
 */
export interface GetChannelsResponseDto {
    /**
     * 
     * @type {string}
     * @memberof GetChannelsResponseDto
     */
    lastId: string;
    /**
     * 
     * @type {Date}
     * @memberof GetChannelsResponseDto
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof GetChannelsResponseDto
     */
    updatedAt?: Date;
    /**
     * 
     * @type {Array<ChannelMemberDto>}
     * @memberof GetChannelsResponseDto
     */
    channelMembers: Array<ChannelMemberDto>;
    /**
     * 
     * @type {number}
     * @memberof GetChannelsResponseDto
     */
    tip?: number;
    /**
     * 
     * @type {Date}
     * @memberof GetChannelsResponseDto
     */
    recent?: Date;
}

/**
 * Check if a given object implements the GetChannelsResponseDto interface.
 */
export function instanceOfGetChannelsResponseDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "lastId" in value;
    isInstance = isInstance && "channelMembers" in value;

    return isInstance;
}

export function GetChannelsResponseDtoFromJSON(json: any): GetChannelsResponseDto {
    return GetChannelsResponseDtoFromJSONTyped(json, false);
}

export function GetChannelsResponseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetChannelsResponseDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'lastId': json['lastId'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (new Date(json['updatedAt'])),
        'channelMembers': ((json['channelMembers'] as Array<any>).map(ChannelMemberDtoFromJSON)),
        'tip': !exists(json, 'tip') ? undefined : json['tip'],
        'recent': !exists(json, 'recent') ? undefined : (new Date(json['recent'])),
    };
}

export function GetChannelsResponseDtoToJSON(value?: GetChannelsResponseDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'lastId': value.lastId,
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'updatedAt': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
        'channelMembers': ((value.channelMembers as Array<any>).map(ChannelMemberDtoToJSON)),
        'tip': value.tip,
        'recent': value.recent === undefined ? undefined : (value.recent.toISOString()),
    };
}

