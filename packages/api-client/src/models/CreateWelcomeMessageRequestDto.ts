/* tslint:disable */
/* eslint-disable */
/**
 * Passes Backend
 * Get your pass
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateWelcomeMessageRequestDto
 */
export interface CreateWelcomeMessageRequestDto {
    /**
     * 
     * @type {string}
     * @memberof CreateWelcomeMessageRequestDto
     */
    text: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof CreateWelcomeMessageRequestDto
     */
    contentIds: Array<string>;
    /**
     * 
     * @type {number}
     * @memberof CreateWelcomeMessageRequestDto
     */
    previewIndex: number;
    /**
     * 
     * @type {number}
     * @memberof CreateWelcomeMessageRequestDto
     */
    price?: number;
}

/**
 * Check if a given object implements the CreateWelcomeMessageRequestDto interface.
 */
export function instanceOfCreateWelcomeMessageRequestDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "text" in value;
    isInstance = isInstance && "contentIds" in value;
    isInstance = isInstance && "previewIndex" in value;

    return isInstance;
}

export function CreateWelcomeMessageRequestDtoFromJSON(json: any): CreateWelcomeMessageRequestDto {
    return CreateWelcomeMessageRequestDtoFromJSONTyped(json, false);
}

export function CreateWelcomeMessageRequestDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateWelcomeMessageRequestDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'text': json['text'],
        'contentIds': json['contentIds'],
        'previewIndex': json['previewIndex'],
        'price': !exists(json, 'price') ? undefined : json['price'],
    };
}

export function CreateWelcomeMessageRequestDtoToJSON(value?: CreateWelcomeMessageRequestDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'text': value.text,
        'contentIds': value.contentIds,
        'previewIndex': value.previewIndex,
        'price': value.price,
    };
}

