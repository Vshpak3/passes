/* tslint:disable */
/* eslint-disable */
/**
 * Passes Backend
 * Get your pass
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PostDto } from './PostDto';
import {
    PostDtoFromJSON,
    PostDtoFromJSONTyped,
    PostDtoToJSON,
} from './PostDto';

/**
 * 
 * @export
 * @interface GetPostsResponseDto
 */
export interface GetPostsResponseDto {
    /**
     * 
     * @type {string}
     * @memberof GetPostsResponseDto
     */
    lastId: string;
    /**
     * 
     * @type {Date}
     * @memberof GetPostsResponseDto
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof GetPostsResponseDto
     */
    updatedAt?: Date;
    /**
     * 
     * @type {Array<PostDto>}
     * @memberof GetPostsResponseDto
     */
    posts: Array<PostDto>;
    /**
     * 
     * @type {number}
     * @memberof GetPostsResponseDto
     */
    count: number;
}

/**
 * Check if a given object implements the GetPostsResponseDto interface.
 */
export function instanceOfGetPostsResponseDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "lastId" in value;
    isInstance = isInstance && "posts" in value;
    isInstance = isInstance && "count" in value;

    return isInstance;
}

export function GetPostsResponseDtoFromJSON(json: any): GetPostsResponseDto {
    return GetPostsResponseDtoFromJSONTyped(json, false);
}

export function GetPostsResponseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetPostsResponseDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'lastId': json['lastId'],
        'createdAt': !exists(json, 'createdAt') ? undefined : json['createdAt'],
        'updatedAt': !exists(json, 'updatedAt') ? undefined : json['updatedAt'],
        'posts': ((json['posts'] as Array<any>).map(PostDtoFromJSON)),
        'count': json['count'],
    };
}

export function GetPostsResponseDtoToJSON(value?: GetPostsResponseDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'lastId': value.lastId,
        'createdAt': value.createdAt,
        'updatedAt': value.updatedAt,
        'posts': ((value.posts as Array<any>).map(PostDtoToJSON)),
        'count': value.count,
    };
}

