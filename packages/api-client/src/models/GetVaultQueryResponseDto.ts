/* tslint:disable */
/* eslint-disable */
/**
 * Passes Backend
 * Get your pass
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ContentDto } from './ContentDto';
import {
    ContentDtoFromJSON,
    ContentDtoFromJSONTyped,
    ContentDtoToJSON,
} from './ContentDto';

/**
 * 
 * @export
 * @interface GetVaultQueryResponseDto
 */
export interface GetVaultQueryResponseDto {
    /**
     * 
     * @type {Date}
     * @memberof GetVaultQueryResponseDto
     */
    createdAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof GetVaultQueryResponseDto
     */
    lastId?: string;
    /**
     * 
     * @type {string}
     * @memberof GetVaultQueryResponseDto
     */
    category?: GetVaultQueryResponseDtoCategoryEnum;
    /**
     * 
     * @type {string}
     * @memberof GetVaultQueryResponseDto
     */
    type?: GetVaultQueryResponseDtoTypeEnum;
    /**
     * 
     * @type {Array<ContentDto>}
     * @memberof GetVaultQueryResponseDto
     */
    data: Array<ContentDto>;
}


/**
 * @export
 */
export const GetVaultQueryResponseDtoCategoryEnum = {
    Posts: 'posts',
    Messages: 'messages',
    Uploads: 'uploads'
} as const;
export type GetVaultQueryResponseDtoCategoryEnum = typeof GetVaultQueryResponseDtoCategoryEnum[keyof typeof GetVaultQueryResponseDtoCategoryEnum];

/**
 * @export
 */
export const GetVaultQueryResponseDtoTypeEnum = {
    Image: 'image',
    Video: 'video',
    Gif: 'gif',
    Audio: 'audio'
} as const;
export type GetVaultQueryResponseDtoTypeEnum = typeof GetVaultQueryResponseDtoTypeEnum[keyof typeof GetVaultQueryResponseDtoTypeEnum];


/**
 * Check if a given object implements the GetVaultQueryResponseDto interface.
 */
export function instanceOfGetVaultQueryResponseDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "data" in value;

    return isInstance;
}

export function GetVaultQueryResponseDtoFromJSON(json: any): GetVaultQueryResponseDto {
    return GetVaultQueryResponseDtoFromJSONTyped(json, false);
}

export function GetVaultQueryResponseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetVaultQueryResponseDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'lastId': !exists(json, 'lastId') ? undefined : json['lastId'],
        'category': !exists(json, 'category') ? undefined : json['category'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'data': ((json['data'] as Array<any>).map(ContentDtoFromJSON)),
    };
}

export function GetVaultQueryResponseDtoToJSON(value?: GetVaultQueryResponseDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'lastId': value.lastId,
        'category': value.category,
        'type': value.type,
        'data': ((value.data as Array<any>).map(ContentDtoToJSON)),
    };
}

