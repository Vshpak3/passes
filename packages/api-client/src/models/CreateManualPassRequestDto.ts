/* tslint:disable */
/* eslint-disable */
/**
 * Passes Backend
 * Get your pass
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateManualPassRequestDto
 */
export interface CreateManualPassRequestDto {
    /**
     * 
     * @type {string}
     * @memberof CreateManualPassRequestDto
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof CreateManualPassRequestDto
     */
    description: string;
    /**
     * 
     * @type {string}
     * @memberof CreateManualPassRequestDto
     */
    type: CreateManualPassRequestDtoTypeEnum;
    /**
     * 
     * @type {number}
     * @memberof CreateManualPassRequestDto
     */
    price: number;
    /**
     * 
     * @type {number}
     * @memberof CreateManualPassRequestDto
     */
    totalSupply: number | null;
    /**
     * 
     * @type {number}
     * @memberof CreateManualPassRequestDto
     */
    duration?: number;
    /**
     * 
     * @type {boolean}
     * @memberof CreateManualPassRequestDto
     */
    freetrial?: boolean;
    /**
     * 
     * @type {number}
     * @memberof CreateManualPassRequestDto
     */
    messages?: number | null;
    /**
     * 
     * @type {string}
     * @memberof CreateManualPassRequestDto
     */
    chain: CreateManualPassRequestDtoChainEnum;
    /**
     * 
     * @type {number}
     * @memberof CreateManualPassRequestDto
     */
    royalties?: number;
    /**
     * 
     * @type {string}
     * @memberof CreateManualPassRequestDto
     */
    animationType?: CreateManualPassRequestDtoAnimationTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof CreateManualPassRequestDto
     */
    imageType?: CreateManualPassRequestDtoImageTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof CreateManualPassRequestDto
     */
    accessType: CreateManualPassRequestDtoAccessTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof CreateManualPassRequestDto
     */
    userId?: string;
    /**
     * 
     * @type {string}
     * @memberof CreateManualPassRequestDto
     */
    username?: string;
    /**
     * 
     * @type {string}
     * @memberof CreateManualPassRequestDto
     */
    secret: string;
}


/**
 * @export
 */
export const CreateManualPassRequestDtoTypeEnum = {
    Subscription: 'subscription',
    Lifetime: 'lifetime',
    External: 'external'
} as const;
export type CreateManualPassRequestDtoTypeEnum = typeof CreateManualPassRequestDtoTypeEnum[keyof typeof CreateManualPassRequestDtoTypeEnum];

/**
 * @export
 */
export const CreateManualPassRequestDtoChainEnum = {
    Eth: 'eth',
    Sol: 'sol',
    Avax: 'avax',
    Matic: 'matic'
} as const;
export type CreateManualPassRequestDtoChainEnum = typeof CreateManualPassRequestDtoChainEnum[keyof typeof CreateManualPassRequestDtoChainEnum];

/**
 * @export
 */
export const CreateManualPassRequestDtoAnimationTypeEnum = {
    Mp4: 'mp4',
    Mov: 'mov'
} as const;
export type CreateManualPassRequestDtoAnimationTypeEnum = typeof CreateManualPassRequestDtoAnimationTypeEnum[keyof typeof CreateManualPassRequestDtoAnimationTypeEnum];

/**
 * @export
 */
export const CreateManualPassRequestDtoImageTypeEnum = {
    Jpeg: 'jpeg',
    Png: 'png',
    Gif: 'gif'
} as const;
export type CreateManualPassRequestDtoImageTypeEnum = typeof CreateManualPassRequestDtoImageTypeEnum[keyof typeof CreateManualPassRequestDtoImageTypeEnum];

/**
 * @export
 */
export const CreateManualPassRequestDtoAccessTypeEnum = {
    PassAccess: 'pass_access',
    AccountAccess: 'account_access'
} as const;
export type CreateManualPassRequestDtoAccessTypeEnum = typeof CreateManualPassRequestDtoAccessTypeEnum[keyof typeof CreateManualPassRequestDtoAccessTypeEnum];


/**
 * Check if a given object implements the CreateManualPassRequestDto interface.
 */
export function instanceOfCreateManualPassRequestDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "title" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "price" in value;
    isInstance = isInstance && "totalSupply" in value;
    isInstance = isInstance && "chain" in value;
    isInstance = isInstance && "accessType" in value;
    isInstance = isInstance && "secret" in value;

    return isInstance;
}

export function CreateManualPassRequestDtoFromJSON(json: any): CreateManualPassRequestDto {
    return CreateManualPassRequestDtoFromJSONTyped(json, false);
}

export function CreateManualPassRequestDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateManualPassRequestDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'title': json['title'],
        'description': json['description'],
        'type': json['type'],
        'price': json['price'],
        'totalSupply': json['totalSupply'],
        'duration': !exists(json, 'duration') ? undefined : json['duration'],
        'freetrial': !exists(json, 'freetrial') ? undefined : json['freetrial'],
        'messages': !exists(json, 'messages') ? undefined : json['messages'],
        'chain': json['chain'],
        'royalties': !exists(json, 'royalties') ? undefined : json['royalties'],
        'animationType': !exists(json, 'animationType') ? undefined : json['animationType'],
        'imageType': !exists(json, 'imageType') ? undefined : json['imageType'],
        'accessType': json['accessType'],
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
        'username': !exists(json, 'username') ? undefined : json['username'],
        'secret': json['secret'],
    };
}

export function CreateManualPassRequestDtoToJSON(value?: CreateManualPassRequestDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'title': value.title,
        'description': value.description,
        'type': value.type,
        'price': value.price,
        'totalSupply': value.totalSupply,
        'duration': value.duration,
        'freetrial': value.freetrial,
        'messages': value.messages,
        'chain': value.chain,
        'royalties': value.royalties,
        'animationType': value.animationType,
        'imageType': value.imageType,
        'accessType': value.accessType,
        'userId': value.userId,
        'username': value.username,
        'secret': value.secret,
    };
}

