/* tslint:disable */
/* eslint-disable */
/**
 * Passes Backend
 * Get your pass
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PassHolderDto
 */
export interface PassHolderDto {
    /**
     * 
     * @type {string}
     * @memberof PassHolderDto
     */
    passHolderId: string;
    /**
     * 
     * @type {string}
     * @memberof PassHolderDto
     */
    passId: string;
    /**
     * 
     * @type {string}
     * @memberof PassHolderDto
     */
    holderId: string;
    /**
     * 
     * @type {object}
     * @memberof PassHolderDto
     */
    messages?: object;
    /**
     * 
     * @type {Date}
     * @memberof PassHolderDto
     */
    expiresAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof PassHolderDto
     */
    holderUsername?: string;
    /**
     * 
     * @type {string}
     * @memberof PassHolderDto
     */
    holderDisplayName?: string;
    /**
     * 
     * @type {string}
     * @memberof PassHolderDto
     */
    address: string;
    /**
     * 
     * @type {string}
     * @memberof PassHolderDto
     */
    chain: PassHolderDtoChainEnum;
    /**
     * 
     * @type {string}
     * @memberof PassHolderDto
     */
    tokenId?: string;
    /**
     * 
     * @type {string}
     * @memberof PassHolderDto
     */
    type?: PassHolderDtoTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof PassHolderDto
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof PassHolderDto
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof PassHolderDto
     */
    creatorId?: string;
    /**
     * 
     * @type {string}
     * @memberof PassHolderDto
     */
    creatorUsername?: string;
    /**
     * 
     * @type {string}
     * @memberof PassHolderDto
     */
    creatorDisplayName?: string;
}


/**
 * @export
 */
export const PassHolderDtoChainEnum = {
    Eth: 'eth',
    Sol: 'sol',
    Avax: 'avax',
    Matic: 'matic'
} as const;
export type PassHolderDtoChainEnum = typeof PassHolderDtoChainEnum[keyof typeof PassHolderDtoChainEnum];

/**
 * @export
 */
export const PassHolderDtoTypeEnum = {
    Subscription: 'subscription',
    Lifetime: 'lifetime',
    External: 'external'
} as const;
export type PassHolderDtoTypeEnum = typeof PassHolderDtoTypeEnum[keyof typeof PassHolderDtoTypeEnum];


export function PassHolderDtoFromJSON(json: any): PassHolderDto {
    return PassHolderDtoFromJSONTyped(json, false);
}

export function PassHolderDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PassHolderDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'passHolderId': json['passHolderId'],
        'passId': json['passId'],
        'holderId': json['holderId'],
        'messages': !exists(json, 'messages') ? undefined : json['messages'],
        'expiresAt': !exists(json, 'expiresAt') ? undefined : (new Date(json['expiresAt'])),
        'holderUsername': !exists(json, 'holderUsername') ? undefined : json['holderUsername'],
        'holderDisplayName': !exists(json, 'holderDisplayName') ? undefined : json['holderDisplayName'],
        'address': json['address'],
        'chain': json['chain'],
        'tokenId': !exists(json, 'tokenId') ? undefined : json['tokenId'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'creatorId': !exists(json, 'creatorId') ? undefined : json['creatorId'],
        'creatorUsername': !exists(json, 'creatorUsername') ? undefined : json['creatorUsername'],
        'creatorDisplayName': !exists(json, 'creatorDisplayName') ? undefined : json['creatorDisplayName'],
    };
}

export function PassHolderDtoToJSON(value?: PassHolderDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'passHolderId': value.passHolderId,
        'passId': value.passId,
        'holderId': value.holderId,
        'messages': value.messages,
        'expiresAt': value.expiresAt === undefined ? undefined : (value.expiresAt.toISOString()),
        'holderUsername': value.holderUsername,
        'holderDisplayName': value.holderDisplayName,
        'address': value.address,
        'chain': value.chain,
        'tokenId': value.tokenId,
        'type': value.type,
        'title': value.title,
        'description': value.description,
        'creatorId': value.creatorId,
        'creatorUsername': value.creatorUsername,
        'creatorDisplayName': value.creatorDisplayName,
    };
}

