/* tslint:disable */
/* eslint-disable */
/**
 * Passes Backend
 * Get your pass
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ListDto } from './ListDto';
import {
    ListDtoFromJSON,
    ListDtoFromJSONTyped,
    ListDtoToJSON,
} from './ListDto';

/**
 * 
 * @export
 * @interface GetListsResponseDto
 */
export interface GetListsResponseDto {
    /**
     * 
     * @type {Date}
     * @memberof GetListsResponseDto
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof GetListsResponseDto
     */
    updatedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof GetListsResponseDto
     */
    lastId?: string;
    /**
     * 
     * @type {string}
     * @memberof GetListsResponseDto
     */
    search?: string;
    /**
     * 
     * @type {string}
     * @memberof GetListsResponseDto
     */
    order: GetListsResponseDtoOrderEnum;
    /**
     * 
     * @type {string}
     * @memberof GetListsResponseDto
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof GetListsResponseDto
     */
    orderType: GetListsResponseDtoOrderTypeEnum;
    /**
     * 
     * @type {Array<ListDto>}
     * @memberof GetListsResponseDto
     */
    data: Array<ListDto>;
}


/**
 * @export
 */
export const GetListsResponseDtoOrderEnum = {
    Asc: 'asc',
    Desc: 'desc'
} as const;
export type GetListsResponseDtoOrderEnum = typeof GetListsResponseDtoOrderEnum[keyof typeof GetListsResponseDtoOrderEnum];

/**
 * @export
 */
export const GetListsResponseDtoOrderTypeEnum = {
    Name: 'name',
    UpdatedAt: 'updated at',
    CreatedAt: 'created at'
} as const;
export type GetListsResponseDtoOrderTypeEnum = typeof GetListsResponseDtoOrderTypeEnum[keyof typeof GetListsResponseDtoOrderTypeEnum];


/**
 * Check if a given object implements the GetListsResponseDto interface.
 */
export function instanceOfGetListsResponseDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "order" in value;
    isInstance = isInstance && "orderType" in value;
    isInstance = isInstance && "data" in value;

    return isInstance;
}

export function GetListsResponseDtoFromJSON(json: any): GetListsResponseDto {
    return GetListsResponseDtoFromJSONTyped(json, false);
}

export function GetListsResponseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetListsResponseDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (new Date(json['updatedAt'])),
        'lastId': !exists(json, 'lastId') ? undefined : json['lastId'],
        'search': !exists(json, 'search') ? undefined : json['search'],
        'order': json['order'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'orderType': json['orderType'],
        'data': ((json['data'] as Array<any>).map(ListDtoFromJSON)),
    };
}

export function GetListsResponseDtoToJSON(value?: GetListsResponseDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'updatedAt': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
        'lastId': value.lastId,
        'search': value.search,
        'order': value.order,
        'name': value.name,
        'orderType': value.orderType,
        'data': ((value.data as Array<any>).map(ListDtoToJSON)),
    };
}

