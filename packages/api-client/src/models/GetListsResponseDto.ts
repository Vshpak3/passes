/* tslint:disable */
/* eslint-disable */
/**
 * Passes Backend
 * Get your pass
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GetListsResponseDto
 */
export interface GetListsResponseDto {
    /**
     * 
     * @type {string}
     * @memberof GetListsResponseDto
     */
    lastId: string;
    /**
     * 
     * @type {Date}
     * @memberof GetListsResponseDto
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof GetListsResponseDto
     */
    updatedAt?: Date;
    /**
     * 
     * @type {Array<string>}
     * @memberof GetListsResponseDto
     */
    lists: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof GetListsResponseDto
     */
    name?: string;
}

/**
 * Check if a given object implements the GetListsResponseDto interface.
 */
export function instanceOfGetListsResponseDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "lastId" in value;
    isInstance = isInstance && "lists" in value;

    return isInstance;
}

export function GetListsResponseDtoFromJSON(json: any): GetListsResponseDto {
    return GetListsResponseDtoFromJSONTyped(json, false);
}

export function GetListsResponseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetListsResponseDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'lastId': json['lastId'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (new Date(json['updatedAt'])),
        'lists': json['lists'],
        'name': !exists(json, 'name') ? undefined : json['name'],
    };
}

export function GetListsResponseDtoToJSON(value?: GetListsResponseDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'lastId': value.lastId,
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'updatedAt': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
        'lists': value.lists,
        'name': value.name,
    };
}

