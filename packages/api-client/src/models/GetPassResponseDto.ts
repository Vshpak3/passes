/* tslint:disable */
/* eslint-disable */
/**
 * Passes Backend
 * Get your pass
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GetPassResponseDto
 */
export interface GetPassResponseDto {
    /**
     * 
     * @type {string}
     * @memberof GetPassResponseDto
     */
    passId: string;
    /**
     * 
     * @type {string}
     * @memberof GetPassResponseDto
     */
    creatorId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof GetPassResponseDto
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof GetPassResponseDto
     */
    description: string;
    /**
     * 
     * @type {string}
     * @memberof GetPassResponseDto
     */
    symbol: string;
    /**
     * 
     * @type {string}
     * @memberof GetPassResponseDto
     */
    type: GetPassResponseDtoTypeEnum;
    /**
     * 
     * @type {number}
     * @memberof GetPassResponseDto
     */
    price: number;
    /**
     * 
     * @type {number}
     * @memberof GetPassResponseDto
     */
    ethPrice: number | null;
    /**
     * 
     * @type {number}
     * @memberof GetPassResponseDto
     */
    duration?: number | null;
    /**
     * 
     * @type {number}
     * @memberof GetPassResponseDto
     */
    totalSupply: number | null;
    /**
     * 
     * @type {number}
     * @memberof GetPassResponseDto
     */
    remainingSupply: number | null;
    /**
     * 
     * @type {string}
     * @memberof GetPassResponseDto
     */
    chain: GetPassResponseDtoChainEnum;
    /**
     * 
     * @type {boolean}
     * @memberof GetPassResponseDto
     */
    freetrial: boolean;
    /**
     * 
     * @type {string}
     * @memberof GetPassResponseDto
     */
    collectionAddress: string | null;
    /**
     * 
     * @type {Date}
     * @memberof GetPassResponseDto
     */
    pinnedAt?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof GetPassResponseDto
     */
    createdAt: Date;
    /**
     * 
     * @type {string}
     * @memberof GetPassResponseDto
     */
    creatorUsername?: string;
    /**
     * 
     * @type {string}
     * @memberof GetPassResponseDto
     */
    creatorDisplayName?: string;
    /**
     * 
     * @type {string}
     * @memberof GetPassResponseDto
     */
    imageType: GetPassResponseDtoImageTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof GetPassResponseDto
     */
    animationType: GetPassResponseDtoAnimationTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof GetPassResponseDto
     */
    accessType: GetPassResponseDtoAccessTypeEnum;
    /**
     * 
     * @type {number}
     * @memberof GetPassResponseDto
     */
    totalMessages: number | null;
}


/**
 * @export
 */
export const GetPassResponseDtoTypeEnum = {
    Subscription: 'subscription',
    Lifetime: 'lifetime',
    External: 'external'
} as const;
export type GetPassResponseDtoTypeEnum = typeof GetPassResponseDtoTypeEnum[keyof typeof GetPassResponseDtoTypeEnum];

/**
 * @export
 */
export const GetPassResponseDtoChainEnum = {
    Eth: 'eth',
    Sol: 'sol',
    Avax: 'avax',
    Matic: 'matic'
} as const;
export type GetPassResponseDtoChainEnum = typeof GetPassResponseDtoChainEnum[keyof typeof GetPassResponseDtoChainEnum];

/**
 * @export
 */
export const GetPassResponseDtoImageTypeEnum = {
    Jpeg: 'jpeg',
    Png: 'png',
    Gif: 'gif'
} as const;
export type GetPassResponseDtoImageTypeEnum = typeof GetPassResponseDtoImageTypeEnum[keyof typeof GetPassResponseDtoImageTypeEnum];

/**
 * @export
 */
export const GetPassResponseDtoAnimationTypeEnum = {
    Mp4: 'mp4',
    Mov: 'mov'
} as const;
export type GetPassResponseDtoAnimationTypeEnum = typeof GetPassResponseDtoAnimationTypeEnum[keyof typeof GetPassResponseDtoAnimationTypeEnum];

/**
 * @export
 */
export const GetPassResponseDtoAccessTypeEnum = {
    PassAccess: 'pass_access',
    AccountAccess: 'account_access'
} as const;
export type GetPassResponseDtoAccessTypeEnum = typeof GetPassResponseDtoAccessTypeEnum[keyof typeof GetPassResponseDtoAccessTypeEnum];


/**
 * Check if a given object implements the GetPassResponseDto interface.
 */
export function instanceOfGetPassResponseDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "passId" in value;
    isInstance = isInstance && "title" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "symbol" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "price" in value;
    isInstance = isInstance && "ethPrice" in value;
    isInstance = isInstance && "totalSupply" in value;
    isInstance = isInstance && "remainingSupply" in value;
    isInstance = isInstance && "chain" in value;
    isInstance = isInstance && "freetrial" in value;
    isInstance = isInstance && "collectionAddress" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "imageType" in value;
    isInstance = isInstance && "animationType" in value;
    isInstance = isInstance && "accessType" in value;
    isInstance = isInstance && "totalMessages" in value;

    return isInstance;
}

export function GetPassResponseDtoFromJSON(json: any): GetPassResponseDto {
    return GetPassResponseDtoFromJSONTyped(json, false);
}

export function GetPassResponseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetPassResponseDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'passId': json['passId'],
        'creatorId': !exists(json, 'creatorId') ? undefined : json['creatorId'],
        'title': json['title'],
        'description': json['description'],
        'symbol': json['symbol'],
        'type': json['type'],
        'price': json['price'],
        'ethPrice': json['ethPrice'],
        'duration': !exists(json, 'duration') ? undefined : json['duration'],
        'totalSupply': json['totalSupply'],
        'remainingSupply': json['remainingSupply'],
        'chain': json['chain'],
        'freetrial': json['freetrial'],
        'collectionAddress': json['collectionAddress'],
        'pinnedAt': !exists(json, 'pinnedAt') ? undefined : (json['pinnedAt'] === null ? null : new Date(json['pinnedAt'])),
        'createdAt': (new Date(json['createdAt'])),
        'creatorUsername': !exists(json, 'creatorUsername') ? undefined : json['creatorUsername'],
        'creatorDisplayName': !exists(json, 'creatorDisplayName') ? undefined : json['creatorDisplayName'],
        'imageType': json['imageType'],
        'animationType': json['animationType'],
        'accessType': json['accessType'],
        'totalMessages': json['totalMessages'],
    };
}

export function GetPassResponseDtoToJSON(value?: GetPassResponseDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'passId': value.passId,
        'creatorId': value.creatorId,
        'title': value.title,
        'description': value.description,
        'symbol': value.symbol,
        'type': value.type,
        'price': value.price,
        'ethPrice': value.ethPrice,
        'duration': value.duration,
        'totalSupply': value.totalSupply,
        'remainingSupply': value.remainingSupply,
        'chain': value.chain,
        'freetrial': value.freetrial,
        'collectionAddress': value.collectionAddress,
        'pinnedAt': value.pinnedAt === undefined ? undefined : (value.pinnedAt === null ? null : value.pinnedAt.toISOString()),
        'createdAt': (value.createdAt.toISOString()),
        'creatorUsername': value.creatorUsername,
        'creatorDisplayName': value.creatorDisplayName,
        'imageType': value.imageType,
        'animationType': value.animationType,
        'accessType': value.accessType,
        'totalMessages': value.totalMessages,
    };
}

