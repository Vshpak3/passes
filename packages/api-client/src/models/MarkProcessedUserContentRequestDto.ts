/* tslint:disable */
/* eslint-disable */
/**
 * Passes Backend
 * Get your pass
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MarkProcessedUserContentRequestDto
 */
export interface MarkProcessedUserContentRequestDto {
    /**
     * 
     * @type {string}
     * @memberof MarkProcessedUserContentRequestDto
     */
    contentId: string;
    /**
     * 
     * @type {string}
     * @memberof MarkProcessedUserContentRequestDto
     */
    userId: string;
    /**
     * 
     * @type {string}
     * @memberof MarkProcessedUserContentRequestDto
     */
    secret: string;
}

/**
 * Check if a given object implements the MarkProcessedUserContentRequestDto interface.
 */
export function instanceOfMarkProcessedUserContentRequestDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "contentId" in value;
    isInstance = isInstance && "userId" in value;
    isInstance = isInstance && "secret" in value;

    return isInstance;
}

export function MarkProcessedUserContentRequestDtoFromJSON(json: any): MarkProcessedUserContentRequestDto {
    return MarkProcessedUserContentRequestDtoFromJSONTyped(json, false);
}

export function MarkProcessedUserContentRequestDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): MarkProcessedUserContentRequestDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'contentId': json['contentId'],
        'userId': json['userId'],
        'secret': json['secret'],
    };
}

export function MarkProcessedUserContentRequestDtoToJSON(value?: MarkProcessedUserContentRequestDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'contentId': value.contentId,
        'userId': value.userId,
        'secret': value.secret,
    };
}

