/* tslint:disable */
/* eslint-disable */
/**
 * Passes Backend
 * Get your pass
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ContentDto } from './ContentDto';
import {
    ContentDtoFromJSON,
    ContentDtoFromJSONTyped,
    ContentDtoToJSON,
} from './ContentDto';
import type { TagDto } from './TagDto';
import {
    TagDtoFromJSON,
    TagDtoFromJSONTyped,
    TagDtoToJSON,
} from './TagDto';

/**
 * 
 * @export
 * @interface PostDto
 */
export interface PostDto {
    /**
     * 
     * @type {string}
     * @memberof PostDto
     */
    postId: string;
    /**
     * 
     * @type {boolean}
     * @memberof PostDto
     */
    paywall: boolean;
    /**
     * 
     * @type {string}
     * @memberof PostDto
     */
    userId: string;
    /**
     * 
     * @type {string}
     * @memberof PostDto
     */
    username: string;
    /**
     * 
     * @type {string}
     * @memberof PostDto
     */
    displayName: string;
    /**
     * 
     * @type {string}
     * @memberof PostDto
     */
    text: string;
    /**
     * 
     * @type {Array<TagDto>}
     * @memberof PostDto
     */
    tags: Array<TagDto>;
    /**
     * 
     * @type {Array<ContentDto>}
     * @memberof PostDto
     */
    content?: Array<ContentDto>;
    /**
     * 
     * @type {Array<string>}
     * @memberof PostDto
     */
    passIds: Array<string>;
    /**
     * 
     * @type {number}
     * @memberof PostDto
     */
    numLikes: number;
    /**
     * 
     * @type {number}
     * @memberof PostDto
     */
    numComments: number;
    /**
     * 
     * @type {number}
     * @memberof PostDto
     */
    numPurchases: number;
    /**
     * 
     * @type {number}
     * @memberof PostDto
     */
    earningsPurchases: number;
    /**
     * 
     * @type {boolean}
     * @memberof PostDto
     */
    isLiked?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof PostDto
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof PostDto
     */
    updatedAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof PostDto
     */
    scheduledAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof PostDto
     */
    expiresAt?: Date;
    /**
     * 
     * @type {number}
     * @memberof PostDto
     */
    price?: number;
    /**
     * 
     * @type {number}
     * @memberof PostDto
     */
    totalTipAmount?: number;
}

/**
 * Check if a given object implements the PostDto interface.
 */
export function instanceOfPostDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "postId" in value;
    isInstance = isInstance && "paywall" in value;
    isInstance = isInstance && "userId" in value;
    isInstance = isInstance && "username" in value;
    isInstance = isInstance && "displayName" in value;
    isInstance = isInstance && "text" in value;
    isInstance = isInstance && "tags" in value;
    isInstance = isInstance && "passIds" in value;
    isInstance = isInstance && "numLikes" in value;
    isInstance = isInstance && "numComments" in value;
    isInstance = isInstance && "numPurchases" in value;
    isInstance = isInstance && "earningsPurchases" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "updatedAt" in value;

    return isInstance;
}

export function PostDtoFromJSON(json: any): PostDto {
    return PostDtoFromJSONTyped(json, false);
}

export function PostDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'postId': json['postId'],
        'paywall': json['paywall'],
        'userId': json['userId'],
        'username': json['username'],
        'displayName': json['displayName'],
        'text': json['text'],
        'tags': ((json['tags'] as Array<any>).map(TagDtoFromJSON)),
        'content': !exists(json, 'content') ? undefined : ((json['content'] as Array<any>).map(ContentDtoFromJSON)),
        'passIds': json['passIds'],
        'numLikes': json['numLikes'],
        'numComments': json['numComments'],
        'numPurchases': json['numPurchases'],
        'earningsPurchases': json['earningsPurchases'],
        'isLiked': !exists(json, 'isLiked') ? undefined : json['isLiked'],
        'createdAt': (new Date(json['createdAt'])),
        'updatedAt': (new Date(json['updatedAt'])),
        'scheduledAt': !exists(json, 'scheduledAt') ? undefined : (new Date(json['scheduledAt'])),
        'expiresAt': !exists(json, 'expiresAt') ? undefined : (new Date(json['expiresAt'])),
        'price': !exists(json, 'price') ? undefined : json['price'],
        'totalTipAmount': !exists(json, 'totalTipAmount') ? undefined : json['totalTipAmount'],
    };
}

export function PostDtoToJSON(value?: PostDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'postId': value.postId,
        'paywall': value.paywall,
        'userId': value.userId,
        'username': value.username,
        'displayName': value.displayName,
        'text': value.text,
        'tags': ((value.tags as Array<any>).map(TagDtoToJSON)),
        'content': value.content === undefined ? undefined : ((value.content as Array<any>).map(ContentDtoToJSON)),
        'passIds': value.passIds,
        'numLikes': value.numLikes,
        'numComments': value.numComments,
        'numPurchases': value.numPurchases,
        'earningsPurchases': value.earningsPurchases,
        'isLiked': value.isLiked,
        'createdAt': (value.createdAt.toISOString()),
        'updatedAt': (value.updatedAt.toISOString()),
        'scheduledAt': value.scheduledAt === undefined ? undefined : (value.scheduledAt.toISOString()),
        'expiresAt': value.expiresAt === undefined ? undefined : (value.expiresAt.toISOString()),
        'price': value.price,
        'totalTipAmount': value.totalTipAmount,
    };
}

