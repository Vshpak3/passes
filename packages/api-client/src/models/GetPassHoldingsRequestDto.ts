/* tslint:disable */
/* eslint-disable */
/**
 * Passes Backend
 * Get your pass
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GetPassHoldingsRequestDto
 */
export interface GetPassHoldingsRequestDto {
    /**
     * 
     * @type {Date}
     * @memberof GetPassHoldingsRequestDto
     */
    createdAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof GetPassHoldingsRequestDto
     */
    lastId?: string;
    /**
     * 
     * @type {string}
     * @memberof GetPassHoldingsRequestDto
     */
    search?: string;
    /**
     * 
     * @type {string}
     * @memberof GetPassHoldingsRequestDto
     */
    order: GetPassHoldingsRequestDtoOrderEnum;
    /**
     * 
     * @type {string}
     * @memberof GetPassHoldingsRequestDto
     */
    creatorId?: string;
    /**
     * 
     * @type {string}
     * @memberof GetPassHoldingsRequestDto
     */
    passId?: string;
    /**
     * 
     * @type {string}
     * @memberof GetPassHoldingsRequestDto
     */
    passType?: GetPassHoldingsRequestDtoPassTypeEnum;
    /**
     * 
     * @type {boolean}
     * @memberof GetPassHoldingsRequestDto
     */
    expired?: boolean;
}


/**
 * @export
 */
export const GetPassHoldingsRequestDtoOrderEnum = {
    Asc: 'asc',
    Desc: 'desc'
} as const;
export type GetPassHoldingsRequestDtoOrderEnum = typeof GetPassHoldingsRequestDtoOrderEnum[keyof typeof GetPassHoldingsRequestDtoOrderEnum];

/**
 * @export
 */
export const GetPassHoldingsRequestDtoPassTypeEnum = {
    Subscription: 'subscription',
    Lifetime: 'lifetime',
    External: 'external'
} as const;
export type GetPassHoldingsRequestDtoPassTypeEnum = typeof GetPassHoldingsRequestDtoPassTypeEnum[keyof typeof GetPassHoldingsRequestDtoPassTypeEnum];


/**
 * Check if a given object implements the GetPassHoldingsRequestDto interface.
 */
export function instanceOfGetPassHoldingsRequestDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "order" in value;

    return isInstance;
}

export function GetPassHoldingsRequestDtoFromJSON(json: any): GetPassHoldingsRequestDto {
    return GetPassHoldingsRequestDtoFromJSONTyped(json, false);
}

export function GetPassHoldingsRequestDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetPassHoldingsRequestDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'lastId': !exists(json, 'lastId') ? undefined : json['lastId'],
        'search': !exists(json, 'search') ? undefined : json['search'],
        'order': json['order'],
        'creatorId': !exists(json, 'creatorId') ? undefined : json['creatorId'],
        'passId': !exists(json, 'passId') ? undefined : json['passId'],
        'passType': !exists(json, 'passType') ? undefined : json['passType'],
        'expired': !exists(json, 'expired') ? undefined : json['expired'],
    };
}

export function GetPassHoldingsRequestDtoToJSON(value?: GetPassHoldingsRequestDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'lastId': value.lastId,
        'search': value.search,
        'order': value.order,
        'creatorId': value.creatorId,
        'passId': value.passId,
        'passType': value.passType,
        'expired': value.expired,
    };
}

