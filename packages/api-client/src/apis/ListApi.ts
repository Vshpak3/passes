/* tslint:disable */
/* eslint-disable */
/**
 * Passes Backend
 * Get your pass
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    AddListMemberDto,
    AddListMemberDtoFromJSON,
    AddListMemberDtoToJSON,
    CreateListDto,
    CreateListDtoFromJSON,
    CreateListDtoToJSON,
    GetListDto,
    GetListDtoFromJSON,
    GetListDtoToJSON,
    GetListsDto,
    GetListsDtoFromJSON,
    GetListsDtoToJSON,
} from '../models';

export interface ListAddListMemberRequest {
    addListMemberDto: AddListMemberDto;
}

export interface ListCreateRequest {
    createListDto: CreateListDto;
}

export interface ListDeleteRequest {
    id: string;
}

export interface ListFindRequest {
    id: string;
}

export interface ListRemoveListMemberRequest {
    addListMemberDto: AddListMemberDto;
}

/**
 * 
 */
export class ListApi extends runtime.BaseAPI {

    /**
     * Add ListMember to a List
     */
    async listAddListMemberRaw(requestParameters: ListAddListMemberRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.addListMemberDto === null || requestParameters.addListMemberDto === undefined) {
            throw new runtime.RequiredError('addListMemberDto','Required parameter requestParameters.addListMemberDto was null or undefined when calling listAddListMember.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/list/member`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: AddListMemberDtoToJSON(requestParameters.addListMemberDto),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Add ListMember to a List
     */
    async listAddListMember(requestParameters: ListAddListMemberRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<void> {
        await this.listAddListMemberRaw(requestParameters, initOverrides);
    }

    /**
     * Creates List for a user
     */
    async listCreateRaw(requestParameters: ListCreateRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<CreateListDto>> {
        if (requestParameters.createListDto === null || requestParameters.createListDto === undefined) {
            throw new runtime.RequiredError('createListDto','Required parameter requestParameters.createListDto was null or undefined when calling listCreate.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/list`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreateListDtoToJSON(requestParameters.createListDto),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CreateListDtoFromJSON(jsonValue));
    }

    /**
     * Creates List for a user
     */
    async listCreate(requestParameters: ListCreateRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<CreateListDto> {
        const response = await this.listCreateRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Delete list for user
     */
    async listDeleteRaw(requestParameters: ListDeleteRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<boolean>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling listDelete.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/list/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     * Delete list for user
     */
    async listDelete(requestParameters: ListDeleteRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<boolean> {
        const response = await this.listDeleteRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get list for user
     */
    async listFindRaw(requestParameters: ListFindRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<GetListDto>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling listFind.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/list/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GetListDtoFromJSON(jsonValue));
    }

    /**
     * Get list for user
     */
    async listFind(requestParameters: ListFindRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<GetListDto> {
        const response = await this.listFindRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get all lists for user
     */
    async listFindAllRaw(initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<GetListsDto>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/list`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GetListsDtoFromJSON(jsonValue));
    }

    /**
     * Get all lists for user
     */
    async listFindAll(initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<GetListsDto> {
        const response = await this.listFindAllRaw(initOverrides);
        return await response.value();
    }

    /**
     * Remove ListMember from a List
     */
    async listRemoveListMemberRaw(requestParameters: ListRemoveListMemberRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.addListMemberDto === null || requestParameters.addListMemberDto === undefined) {
            throw new runtime.RequiredError('addListMemberDto','Required parameter requestParameters.addListMemberDto was null or undefined when calling listRemoveListMember.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/list/member`,
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
            body: AddListMemberDtoToJSON(requestParameters.addListMemberDto),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Remove ListMember from a List
     */
    async listRemoveListMember(requestParameters: ListRemoveListMemberRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<void> {
        await this.listRemoveListMemberRaw(requestParameters, initOverrides);
    }

}
