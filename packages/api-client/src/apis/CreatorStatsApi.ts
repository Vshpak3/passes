/* tslint:disable */
/* eslint-disable */
/**
 * Passes Backend
 * Get your pass
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    CreatorEarningDto,
    CreatorEarningDtoFromJSON,
    CreatorEarningDtoToJSON,
    GetCreatorEarningsHistoryDto,
    GetCreatorEarningsHistoryDtoFromJSON,
    GetCreatorEarningsHistoryDtoToJSON,
} from '../models';

export interface CreatorStatsGetCircleEncryptionKeyRequest {
    getCreatorEarningsHistoryDto: GetCreatorEarningsHistoryDto;
}

/**
 * 
 */
export class CreatorStatsApi extends runtime.BaseAPI {

    /**
     * Get historic earnings
     */
    async creatorStatsGetCircleEncryptionKeyRaw(requestParameters: CreatorStatsGetCircleEncryptionKeyRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<Array<CreatorEarningDto>>> {
        if (requestParameters.getCreatorEarningsHistoryDto === null || requestParameters.getCreatorEarningsHistoryDto === undefined) {
            throw new runtime.RequiredError('getCreatorEarningsHistoryDto','Required parameter requestParameters.getCreatorEarningsHistoryDto was null or undefined when calling creatorStatsGetCircleEncryptionKey.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/creator-stats/balance`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
            body: GetCreatorEarningsHistoryDtoToJSON(requestParameters.getCreatorEarningsHistoryDto),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(CreatorEarningDtoFromJSON));
    }

    /**
     * Get historic earnings
     */
    async creatorStatsGetCircleEncryptionKey(requestParameters: CreatorStatsGetCircleEncryptionKeyRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<Array<CreatorEarningDto>> {
        const response = await this.creatorStatsGetCircleEncryptionKeyRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
