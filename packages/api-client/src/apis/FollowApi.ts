/* tslint:disable */
/* eslint-disable */
/**
 * Passes Backend
 * Get your pass
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    CreateFollowingDto,
    CreateFollowingDtoFromJSON,
    CreateFollowingDtoToJSON,
} from '../models';

export interface FollowCreateRequest {
    createFollowingDto: CreateFollowingDto;
}

export interface FollowFindOneRequest {
    id: string;
}

export interface FollowRemoveRequest {
    id: string;
}

/**
 * 
 */
export class FollowApi extends runtime.BaseAPI {

    /**
     * Creates a follow
     */
    async followCreateRaw(requestParameters: FollowCreateRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<CreateFollowingDto>> {
        if (requestParameters.createFollowingDto === null || requestParameters.createFollowingDto === undefined) {
            throw new runtime.RequiredError('createFollowingDto','Required parameter requestParameters.createFollowingDto was null or undefined when calling followCreate.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/follow`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreateFollowingDtoToJSON(requestParameters.createFollowingDto),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CreateFollowingDtoFromJSON(jsonValue));
    }

    /**
     * Creates a follow
     */
    async followCreate(requestParameters: FollowCreateRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<CreateFollowingDto> {
        const response = await this.followCreateRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Gets a following
     */
    async followFindOneRaw(requestParameters: FollowFindOneRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<CreateFollowingDto>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling followFindOne.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/follow/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CreateFollowingDtoFromJSON(jsonValue));
    }

    /**
     * Gets a following
     */
    async followFindOne(requestParameters: FollowFindOneRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<CreateFollowingDto> {
        const response = await this.followFindOneRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Deletes a following
     */
    async followRemoveRaw(requestParameters: FollowRemoveRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling followRemove.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/follow/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Deletes a following
     */
    async followRemove(requestParameters: FollowRemoveRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<void> {
        await this.followRemoveRaw(requestParameters, initOverrides);
    }

}
