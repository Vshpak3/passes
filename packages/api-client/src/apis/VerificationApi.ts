/* tslint:disable */
/* eslint-disable */
/**
 * Passes Backend
 * Get your pass
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    SubmitInquiryRequestDto,
    SubmitInquiryRequestDtoFromJSON,
    SubmitInquiryRequestDtoToJSON,
} from '../models';

export interface VerificationSubmitInquiryRequest {
    submitInquiryRequestDto: SubmitInquiryRequestDto;
}

/**
 * 
 */
export class VerificationApi extends runtime.BaseAPI {

    /**
     * Check if user can submit inquiry
     */
    async verificationCanSubmitRaw(initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<boolean>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/verification/can`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     * Check if user can submit inquiry
     */
    async verificationCanSubmit(initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<boolean> {
        const response = await this.verificationCanSubmitRaw(initOverrides);
        return await response.value();
    }

    /**
     * Submit inquiry
     */
    async verificationSubmitInquiryRaw(requestParameters: VerificationSubmitInquiryRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.submitInquiryRequestDto === null || requestParameters.submitInquiryRequestDto === undefined) {
            throw new runtime.RequiredError('submitInquiryRequestDto','Required parameter requestParameters.submitInquiryRequestDto was null or undefined when calling verificationSubmitInquiry.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/verification`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: SubmitInquiryRequestDtoToJSON(requestParameters.submitInquiryRequestDto),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Submit inquiry
     */
    async verificationSubmitInquiry(requestParameters: VerificationSubmitInquiryRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<void> {
        await this.verificationSubmitInquiryRaw(requestParameters, initOverrides);
    }

}
