/* tslint:disable */
/* eslint-disable */
/**
 * Passes Backend
 * Get your pass
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    AuthTokenResponseDto,
    AuthTokenResponseDtoFromJSON,
    AuthTokenResponseDtoToJSON,
    GetUserResponseDto,
    GetUserResponseDtoFromJSON,
    GetUserResponseDtoToJSON,
    RefreshAuthTokenRequestDto,
    RefreshAuthTokenRequestDtoFromJSON,
    RefreshAuthTokenRequestDtoToJSON,
} from '../models';

export interface AuthRefreshAccessTokenRequest {
    refreshAuthTokenRequestDto: RefreshAuthTokenRequestDto;
}

/**
 * 
 */
export class AuthApi extends runtime.BaseAPI {

    /**
     * Gets the current authenticated user
     */
    async authGetCurrentUserRaw(initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<GetUserResponseDto>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/auth/user`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GetUserResponseDtoFromJSON(jsonValue));
    }

    /**
     * Gets the current authenticated user
     */
    async authGetCurrentUser(initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<GetUserResponseDto> {
        const response = await this.authGetCurrentUserRaw(initOverrides);
        return await response.value();
    }

    /**
     * Refresh the access token
     */
    async authRefreshAccessTokenRaw(requestParameters: AuthRefreshAccessTokenRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<AuthTokenResponseDto>> {
        if (requestParameters.refreshAuthTokenRequestDto === null || requestParameters.refreshAuthTokenRequestDto === undefined) {
            throw new runtime.RequiredError('refreshAuthTokenRequestDto','Required parameter requestParameters.refreshAuthTokenRequestDto was null or undefined when calling authRefreshAccessToken.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/auth/refresh`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: RefreshAuthTokenRequestDtoToJSON(requestParameters.refreshAuthTokenRequestDto),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AuthTokenResponseDtoFromJSON(jsonValue));
    }

    /**
     * Refresh the access token
     */
    async authRefreshAccessToken(requestParameters: AuthRefreshAccessTokenRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<AuthTokenResponseDto> {
        const response = await this.authRefreshAccessTokenRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
