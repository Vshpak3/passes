/* tslint:disable */
/* eslint-disable */
/**
 * Passes Backend
 * Get your pass
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    RawFacebookDeletionRequestDto,
    RawFacebookDeletionRequestDtoFromJSON,
    RawFacebookDeletionRequestDtoToJSON,
} from '../models';

export interface FacebookOauthFacebookDeletionConfirmationRequest {
    confirmationCode: string;
}

export interface FacebookOauthFacebookInitiateDeleteRequest {
    rawFacebookDeletionRequestDto: RawFacebookDeletionRequestDto;
}

/**
 * 
 */
export class AuthFacebookApi extends runtime.BaseAPI {

    /**
     * Start the facebook oauth flow
     */
    async facebookOauthFacebookAuthRaw(initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/auth/facebook`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Start the facebook oauth flow
     */
    async facebookOauthFacebookAuth(initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<void> {
        await this.facebookOauthFacebookAuthRaw(initOverrides);
    }

    /**
     * Redirect from facebook oauth flow
     */
    async facebookOauthFacebookAuthRedirectRaw(initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/auth/facebook/redirect`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Redirect from facebook oauth flow
     */
    async facebookOauthFacebookAuthRedirect(initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<void> {
        await this.facebookOauthFacebookAuthRedirectRaw(initOverrides);
    }

    /**
     * Check if a deletion request has been fulfilled
     */
    async facebookOauthFacebookDeletionConfirmationRaw(requestParameters: FacebookOauthFacebookDeletionConfirmationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.confirmationCode === null || requestParameters.confirmationCode === undefined) {
            throw new runtime.RequiredError('confirmationCode','Required parameter requestParameters.confirmationCode was null or undefined when calling facebookOauthFacebookDeletionConfirmation.');
        }

        const queryParameters: any = {};

        if (requestParameters.confirmationCode !== undefined) {
            queryParameters['confirmationCode'] = requestParameters.confirmationCode;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/auth/facebook/deletion_confirmation`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Check if a deletion request has been fulfilled
     */
    async facebookOauthFacebookDeletionConfirmation(requestParameters: FacebookOauthFacebookDeletionConfirmationRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<void> {
        await this.facebookOauthFacebookDeletionConfirmationRaw(requestParameters, initOverrides);
    }

    /**
     * Initiate a deletion request for a Facebook OAuth user
     */
    async facebookOauthFacebookInitiateDeleteRaw(requestParameters: FacebookOauthFacebookInitiateDeleteRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.rawFacebookDeletionRequestDto === null || requestParameters.rawFacebookDeletionRequestDto === undefined) {
            throw new runtime.RequiredError('rawFacebookDeletionRequestDto','Required parameter requestParameters.rawFacebookDeletionRequestDto was null or undefined when calling facebookOauthFacebookInitiateDelete.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/auth/facebook/deletion_callback`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: RawFacebookDeletionRequestDtoToJSON(requestParameters.rawFacebookDeletionRequestDto),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Initiate a deletion request for a Facebook OAuth user
     */
    async facebookOauthFacebookInitiateDelete(requestParameters: FacebookOauthFacebookInitiateDeleteRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<void> {
        await this.facebookOauthFacebookInitiateDeleteRaw(requestParameters, initOverrides);
    }

}
