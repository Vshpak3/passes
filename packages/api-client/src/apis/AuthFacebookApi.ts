/* tslint:disable */
/* eslint-disable */
/**
 * Passes Backend
 * Get your pass
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';

/**
 * 
 */
export class AuthFacebookApi extends runtime.BaseAPI {

    /**
     * Start the facebook oauth flow
     */
    async facebookOauthFacebookAuthRaw(initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/auth/facebook`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Start the facebook oauth flow
     */
    async facebookOauthFacebookAuth(initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<void> {
        await this.facebookOauthFacebookAuthRaw(initOverrides);
    }

    /**
     * Redirect from facebook oauth flow
     */
    async facebookOauthFacebookAuthRedirectRaw(initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/auth/facebook/redirect`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Redirect from facebook oauth flow
     */
    async facebookOauthFacebookAuthRedirect(initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<void> {
        await this.facebookOauthFacebookAuthRedirectRaw(initOverrides);
    }

}
