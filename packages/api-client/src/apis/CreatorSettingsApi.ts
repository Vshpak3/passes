/* tslint:disable */
/* eslint-disable */
/**
 * Passes Backend
 * Get your pass
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from '../runtime'
import {
  CreateCreatorSettingsRequestDto,
  CreateCreatorSettingsRequestDtoFromJSON,
  CreateCreatorSettingsRequestDtoToJSON,
  UpdateCreatorSettingsRequestDto,
  UpdateCreatorSettingsRequestDtoFromJSON,
  UpdateCreatorSettingsRequestDtoToJSON,
} from '../models'

export interface CreatorSettingsCreateRequest {
  createCreatorSettingsRequestDto: CreateCreatorSettingsRequestDto
}

export interface CreatorSettingsUpdateRequest {
  updateCreatorSettingsRequestDto: UpdateCreatorSettingsRequestDto
}

/**
 *
 */
export class CreatorSettingsApi extends runtime.BaseAPI {
  /**
   * Creates creator settings
   */
  async creatorSettingsCreateRaw(
    requestParameters: CreatorSettingsCreateRequest,
    initOverrides?: RequestInit | runtime.InitOverideFunction,
  ): Promise<runtime.ApiResponse<CreateCreatorSettingsRequestDto>> {
    if (
      requestParameters.createCreatorSettingsRequestDto === null ||
      requestParameters.createCreatorSettingsRequestDto === undefined
    ) {
      throw new runtime.RequiredError(
        'createCreatorSettingsRequestDto',
        'Required parameter requestParameters.createCreatorSettingsRequestDto was null or undefined when calling creatorSettingsCreate.',
      )
    }

    const queryParameters: any = {}

    const headerParameters: runtime.HTTPHeaders = {}

    headerParameters['Content-Type'] = 'application/json'

    const response = await this.request(
      {
        path: `/api/creator-settings`,
        method: 'POST',
        headers: headerParameters,
        query: queryParameters,
        body: CreateCreatorSettingsRequestDtoToJSON(
          requestParameters.createCreatorSettingsRequestDto,
        ),
      },
      initOverrides,
    )

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      CreateCreatorSettingsRequestDtoFromJSON(jsonValue),
    )
  }

  /**
   * Creates creator settings
   */
  async creatorSettingsCreate(
    requestParameters: CreatorSettingsCreateRequest,
    initOverrides?: RequestInit | runtime.InitOverideFunction,
  ): Promise<CreateCreatorSettingsRequestDto> {
    const response = await this.creatorSettingsCreateRaw(
      requestParameters,
      initOverrides,
    )
    return await response.value()
  }

  /**
   * Gets creator settings
   */
  async creatorSettingsFindRaw(
    initOverrides?: RequestInit | runtime.InitOverideFunction,
  ): Promise<runtime.ApiResponse<CreateCreatorSettingsRequestDto>> {
    const queryParameters: any = {}

    const headerParameters: runtime.HTTPHeaders = {}

    const response = await this.request(
      {
        path: `/api/creator-settings`,
        method: 'GET',
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides,
    )

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      CreateCreatorSettingsRequestDtoFromJSON(jsonValue),
    )
  }

  /**
   * Gets creator settings
   */
  async creatorSettingsFind(
    initOverrides?: RequestInit | runtime.InitOverideFunction,
  ): Promise<CreateCreatorSettingsRequestDto> {
    const response = await this.creatorSettingsFindRaw(initOverrides)

    return await response.value()
  }

  /**
   * Updates creator settings
   */
  async creatorSettingsUpdateRaw(
    requestParameters: CreatorSettingsUpdateRequest,
    initOverrides?: RequestInit | runtime.InitOverideFunction,
  ): Promise<runtime.ApiResponse<CreateCreatorSettingsRequestDto>> {
    if (
      requestParameters.updateCreatorSettingsRequestDto === null ||
      requestParameters.updateCreatorSettingsRequestDto === undefined
    ) {
      throw new runtime.RequiredError(
        'updateCreatorSettingsRequestDto',
        'Required parameter requestParameters.updateCreatorSettingsRequestDto was null or undefined when calling creatorSettingsUpdate.',
      )
    }

    const queryParameters: any = {}

    const headerParameters: runtime.HTTPHeaders = {}

    headerParameters['Content-Type'] = 'application/json'

    const response = await this.request(
      {
        path: `/api/creator-settings`,
        method: 'PATCH',
        headers: headerParameters,
        query: queryParameters,
        body: UpdateCreatorSettingsRequestDtoToJSON(
          requestParameters.updateCreatorSettingsRequestDto,
        ),
      },
      initOverrides,
    )

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      CreateCreatorSettingsRequestDtoFromJSON(jsonValue),
    )
  }

  /**
   * Updates creator settings
   */
  async creatorSettingsUpdate(
    requestParameters: CreatorSettingsUpdateRequest,
    initOverrides?: RequestInit | runtime.InitOverideFunction,
  ): Promise<CreateCreatorSettingsRequestDto> {
    const response = await this.creatorSettingsUpdateRaw(
      requestParameters,
      initOverrides,
    )
    return await response.value()
  }
}
