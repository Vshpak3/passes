/* tslint:disable */
/* eslint-disable */
/**
 * Passes Backend
 * Get your pass
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  BooleanResponseDto,
  GetCreatorSettingsResponseDto,
  UpdateCreatorSettingsRequestDto,
} from '../models';
import {
    BooleanResponseDtoFromJSON,
    BooleanResponseDtoToJSON,
    GetCreatorSettingsResponseDtoFromJSON,
    GetCreatorSettingsResponseDtoToJSON,
    UpdateCreatorSettingsRequestDtoFromJSON,
    UpdateCreatorSettingsRequestDtoToJSON,
} from '../models';

export interface UpdateCreatorSettingsRequest {
    updateCreatorSettingsRequestDto: UpdateCreatorSettingsRequestDto;
}

/**
 * 
 */
export class CreatorSettingsApi extends runtime.BaseAPI {

    /**
     * Gets creator settings
     */
    async getCreatorSettingsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetCreatorSettingsResponseDto>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const token = window.localStorage.getItem("access-token")

        if (token) {
            headerParameters["Authorization"] = `Bearer ${JSON.parse(token)}`;
        }
        const response = await this.request({
            path: `/api/creator-settings`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GetCreatorSettingsResponseDtoFromJSON(jsonValue));
    }

    /**
     * Gets creator settings
     */
    async getCreatorSettings(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetCreatorSettingsResponseDto> {
        const response = await this.getCreatorSettingsRaw(initOverrides);
        return await response.value();
    }

    /**
     * Updates creator settings
     */
    async updateCreatorSettingsRaw(requestParameters: UpdateCreatorSettingsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BooleanResponseDto>> {
        if (requestParameters.updateCreatorSettingsRequestDto === null || requestParameters.updateCreatorSettingsRequestDto === undefined) {
            throw new runtime.RequiredError('updateCreatorSettingsRequestDto','Required parameter requestParameters.updateCreatorSettingsRequestDto was null or undefined when calling updateCreatorSettings.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const token = window.localStorage.getItem("access-token")

        if (token) {
            headerParameters["Authorization"] = `Bearer ${JSON.parse(token)}`;
        }
        const response = await this.request({
            path: `/api/creator-settings`,
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: UpdateCreatorSettingsRequestDtoToJSON(requestParameters.updateCreatorSettingsRequestDto),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => BooleanResponseDtoFromJSON(jsonValue));
    }

    /**
     * Updates creator settings
     */
    async updateCreatorSettings(requestParameters: UpdateCreatorSettingsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BooleanResponseDto> {
        const response = await this.updateCreatorSettingsRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
