/* tslint:disable */
/* eslint-disable */
/**
 * Passes Backend
 * Get your pass
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    CreateCreatorSettingsDto,
    CreateCreatorSettingsDtoFromJSON,
    CreateCreatorSettingsDtoToJSON,
} from '../models';

export interface CreatorSettingsCreateRequest {
    createCreatorSettingsDto: CreateCreatorSettingsDto;
}

export interface CreatorSettingsUpdateRequest {
    createCreatorSettingsDto: CreateCreatorSettingsDto;
}

/**
 * 
 */
export class CreatorSettingsApi extends runtime.BaseAPI {

    /**
     * Creates creator settings
     */
    async creatorSettingsCreateRaw(requestParameters: CreatorSettingsCreateRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<CreateCreatorSettingsDto>> {
        if (requestParameters.createCreatorSettingsDto === null || requestParameters.createCreatorSettingsDto === undefined) {
            throw new runtime.RequiredError('createCreatorSettingsDto','Required parameter requestParameters.createCreatorSettingsDto was null or undefined when calling creatorSettingsCreate.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/creator-settings`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreateCreatorSettingsDtoToJSON(requestParameters.createCreatorSettingsDto),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CreateCreatorSettingsDtoFromJSON(jsonValue));
    }

    /**
     * Creates creator settings
     */
    async creatorSettingsCreate(requestParameters: CreatorSettingsCreateRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<CreateCreatorSettingsDto> {
        const response = await this.creatorSettingsCreateRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Gets creator settings
     */
    async creatorSettingsFindRaw(initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<CreateCreatorSettingsDto>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/creator-settings`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CreateCreatorSettingsDtoFromJSON(jsonValue));
    }

    /**
     * Gets creator settings
     */
    async creatorSettingsFind(initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<CreateCreatorSettingsDto> {
        const response = await this.creatorSettingsFindRaw(initOverrides);
        return await response.value();
    }

    /**
     * Updates creator settings
     */
    async creatorSettingsUpdateRaw(requestParameters: CreatorSettingsUpdateRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<CreateCreatorSettingsDto>> {
        if (requestParameters.createCreatorSettingsDto === null || requestParameters.createCreatorSettingsDto === undefined) {
            throw new runtime.RequiredError('createCreatorSettingsDto','Required parameter requestParameters.createCreatorSettingsDto was null or undefined when calling creatorSettingsUpdate.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/creator-settings`,
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: CreateCreatorSettingsDtoToJSON(requestParameters.createCreatorSettingsDto),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CreateCreatorSettingsDtoFromJSON(jsonValue));
    }

    /**
     * Updates creator settings
     */
    async creatorSettingsUpdate(requestParameters: CreatorSettingsUpdateRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<CreateCreatorSettingsDto> {
        const response = await this.creatorSettingsUpdateRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
