version: "3.8"

# Start services: docker compose up -d
# Stop services: docker compose down
# Note: data is persisted after stopping containers. Run the following to delete:
#   docker volume rm monorepo_mysql
#   docker volume rm monorepo_redis
#   docker volume rm monorepo_s3

services:

  # MySQL Database
  # Should match AWS Aurora MySQL version:
  # https://docs.aws.amazon.com/AmazonRDS/latest/AuroraMySQLReleaseNotes/AuroraMySQL.Updates.3020.html
  mysql:
    image: mysql:8.0.23
    platform: linux/x86_64  # needed for M1 macs
    ports:
      - 3306:3306
    environment:
      - MYSQL_DATABASE=passes
      - MYSQL_ROOT_PASSWORD=root
    volumes:
      - mysql:/var/lib/mysql

  # Redis Server
  # Should match the AWS Redis version:
  # https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/supported-engine-versions.html
  redis:
    image: redis:6.2.7-alpine
    command: redis-server
    ports:
      - 6379:6379
    volumes:
      - redis:/data

  # S3 Bucket
  s3:
    image: localstack/localstack:1.0.4
    environment:
      - AWS_DEFAULT_REGION=us-east-1
      - EDGE_PORT=4566
      - DATA_DIR=/tmp/localstack/data
      - SERVICES=s3
      - EXTRA_CORS_ALLOWED_ORIGINS=http://localhost:3000
    ports:
      - 4566:4566
    volumes:
      - s3:/tmp/localstack

volumes:
  mysql:
  redis:
  s3:
